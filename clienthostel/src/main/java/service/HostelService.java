
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import ua.nure.hostel.Student;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HostelService", targetNamespace = "http://service/")
@XmlSeeAlso({
    service.ObjectFactory.class,
    ua.nure.hostel.ObjectFactory.class
})
public interface HostelService {


    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNextId", targetNamespace = "http://service/", className = "service.GetNextId")
    @ResponseWrapper(localName = "getNextIdResponse", targetNamespace = "http://service/", className = "service.GetNextIdResponse")
    @Action(input = "http://service/HostelService/getNextIdRequest", output = "http://service/HostelService/getNextIdResponse")
    public int getNextId();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "createStudent", targetNamespace = "http://service/", className = "service.CreateStudent")
    @ResponseWrapper(localName = "createStudentResponse", targetNamespace = "http://service/", className = "service.CreateStudentResponse")
    @Action(input = "http://service/HostelService/createStudentRequest", output = "http://service/HostelService/createStudentResponse")
    public void createStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        Student arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteStudent", targetNamespace = "http://service/", className = "service.DeleteStudent")
    @ResponseWrapper(localName = "deleteStudentResponse", targetNamespace = "http://service/", className = "service.DeleteStudentResponse")
    @Action(input = "http://service/HostelService/deleteStudentRequest", output = "http://service/HostelService/deleteStudentResponse")
    public void deleteStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ua.nure.hostel.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateStudent", targetNamespace = "http://service/", className = "service.UpdateStudent")
    @ResponseWrapper(localName = "updateStudentResponse", targetNamespace = "http://service/", className = "service.UpdateStudentResponse")
    @Action(input = "http://service/HostelService/updateStudentRequest", output = "http://service/HostelService/updateStudentResponse")
    public Student updateStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        Student arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ua.nure.hostel.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "readStudent", targetNamespace = "http://service/", className = "service.ReadStudent")
    @ResponseWrapper(localName = "readStudentResponse", targetNamespace = "http://service/", className = "service.ReadStudentResponse")
    @Action(input = "http://service/HostelService/readStudentRequest", output = "http://service/HostelService/readStudentResponse")
    public Student readStudent(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ua.nure.hostel.Student>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllStudents", targetNamespace = "http://service/", className = "service.GetAllStudents")
    @ResponseWrapper(localName = "getAllStudentsResponse", targetNamespace = "http://service/", className = "service.GetAllStudentsResponse")
    @Action(input = "http://service/HostelService/getAllStudentsRequest", output = "http://service/HostelService/getAllStudentsResponse")
    public List<Student> getAllStudents();

    /**
     * 
     * @return
     *     returns service.Hostel
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHostel", targetNamespace = "http://service/", className = "service.GetHostel")
    @ResponseWrapper(localName = "getHostelResponse", targetNamespace = "http://service/", className = "service.GetHostelResponse")
    @Action(input = "http://service/HostelService/getHostelRequest", output = "http://service/HostelService/getHostelResponse")
    public Hostel getHostel();

}
